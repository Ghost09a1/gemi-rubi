# Generated by Django 4.2.20 on 2025-04-10 14:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Character Name')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Age')),
                ('gender', models.CharField(blank=True, max_length=50, verbose_name='Gender')),
                ('species', models.CharField(blank=True, max_length=50, verbose_name='Species')),
                ('height', models.CharField(blank=True, max_length=50, verbose_name='Height')),
                ('body_type', models.CharField(blank=True, max_length=50, verbose_name='Body Type')),
                ('personality', models.TextField(blank=True, verbose_name='Personality')),
                ('background', models.TextField(blank=True, verbose_name='Background')),
                ('appearance', models.TextField(blank=True, verbose_name='Appearance')),
                ('public', models.BooleanField(default=True, verbose_name='Public')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='Views')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('current_status', models.CharField(choices=[('available', 'Available for RP'), ('busy', 'Currently in RP'), ('away', 'Away'), ('looking', 'Looking for RP'), ('private', 'In Private RP')], default='available', max_length=20, verbose_name='Current Status')),
                ('current_mood', models.CharField(choices=[('neutral', 'Neutral'), ('flirty', 'Flirty'), ('playful', 'Playful'), ('passionate', 'Passionate'), ('dominant', 'Dominant'), ('submissive', 'Submissive'), ('shy', 'Shy'), ('confident', 'Confident'), ('curious', 'Curious'), ('seductive', 'Seductive')], default='neutral', max_length=20, verbose_name='Current Mood')),
                ('custom_status', models.CharField(blank=True, max_length=100, verbose_name='Custom Status Message')),
                ('allow_random_rp', models.BooleanField(default=True, verbose_name='Open to Random RP')),
                ('private_details', models.TextField(blank=True, help_text='These details are only visible to you and people you explicitly share them with', verbose_name='Private Character Details')),
                ('content_preferences', models.JSONField(blank=True, default=dict, help_text='Storage for character content preferences and boundaries', verbose_name='Content Preferences')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characters', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Character',
                'verbose_name_plural': 'Characters',
                'ordering': ['user', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InfoCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Information Category',
                'verbose_name_plural': 'Information Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='KinkCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
            ],
            options={
                'verbose_name': 'Kink Category',
                'verbose_name_plural': 'Kink Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Kink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kink Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kinks', to='characters.kinkcategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Kink',
                'verbose_name_plural': 'Kinks',
                'ordering': ['category', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InfoField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Field Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('required', models.BooleanField(default=False, verbose_name='Required')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='characters.infocategory', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Information Field',
                'verbose_name_plural': 'Information Fields',
                'ordering': ['category', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CustomKink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kink Name')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='Category')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('rating', models.CharField(choices=[('fave', 'Favorite'), ('yes', 'Yes'), ('maybe', 'Maybe'), ('no', 'No')], max_length=10, verbose_name='Rating')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_kinks', to='characters.character', verbose_name='Character')),
            ],
            options={
                'verbose_name': 'Custom Kink',
                'verbose_name_plural': 'Custom Kinks',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CharacterImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='character_images/', verbose_name='Image')),
                ('title', models.CharField(blank=True, max_length=100, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Primary Image')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='characters.character', verbose_name='Character')),
            ],
            options={
                'verbose_name': 'Character Image',
                'verbose_name_plural': 'Character Images',
                'ordering': ['-is_primary', 'order', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_hidden', models.BooleanField(default=False, verbose_name='Hidden')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_comments', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='characters.character', verbose_name='Character')),
            ],
            options={
                'verbose_name': 'Character Comment',
                'verbose_name_plural': 'Character Comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1 - Poor'), (2, '2 - Fair'), (3, '3 - Average'), (4, '4 - Good'), (5, '5 - Excellent')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='characters.character', verbose_name='Character')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_ratings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Character Rating',
                'verbose_name_plural': 'Character Ratings',
                'unique_together': {('character', 'user')},
            },
        ),
        migrations.CreateModel(
            name='CharacterKink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(choices=[('fave', 'Favorite'), ('yes', 'Yes'), ('maybe', 'Maybe'), ('no', 'No')], max_length=10, verbose_name='Rating')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kinks', to='characters.character', verbose_name='Character')),
                ('kink', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_ratings', to='characters.kink', verbose_name='Kink')),
            ],
            options={
                'verbose_name': 'Character Kink',
                'verbose_name_plural': 'Character Kinks',
                'unique_together': {('character', 'kink')},
            },
        ),
        migrations.CreateModel(
            name='CharacterInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Value')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_fields', to='characters.character', verbose_name='Character')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_values', to='characters.infofield', verbose_name='Field')),
            ],
            options={
                'verbose_name': 'Character Information',
                'verbose_name_plural': 'Character Information',
                'unique_together': {('character', 'field')},
            },
        ),
    ]
