# Generated by Django 4.2.20 on 2025-04-10 14:22

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('characters', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserSimilarity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('similarity_score', models.FloatField(help_text="How similar the users' tastes are (0-1)", verbose_name='Similarity Score')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user1', to=settings.AUTH_USER_MODEL, verbose_name='User 1')),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='similarities_as_user2', to=settings.AUTH_USER_MODEL, verbose_name='User 2')),
            ],
            options={
                'verbose_name': 'User Similarity',
                'verbose_name_plural': 'User Similarities',
                'indexes': [models.Index(fields=['user1', 'similarity_score'], name='recommendat_user1_i_9add72_idx'), models.Index(fields=['user2', 'similarity_score'], name='recommendat_user2_i_15fcb5_idx')],
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(help_text='Character attribute (e.g., species, gender, etc.)', max_length=100, verbose_name='Attribute')),
                ('value', models.CharField(max_length=100, verbose_name='Value')),
                ('weight', models.FloatField(default=1.0, help_text='How strongly this preference influences recommendations', verbose_name='Preference Weight')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_preferences', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
                'indexes': [models.Index(fields=['user'], name='recommendat_user_id_64f718_idx'), models.Index(fields=['attribute', 'value'], name='recommendat_attribu_677f45_idx')],
                'unique_together': {('user', 'attribute', 'value')},
            },
        ),
        migrations.CreateModel(
            name='CharacterRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField(help_text='Higher score indicates stronger recommendation', verbose_name='Recommendation Score')),
                ('reason', models.CharField(choices=[('similar_rating', 'Similar to Characters You Rated Highly'), ('similar_comment', 'Similar to Characters You Commented On'), ('friend_rated', 'Rated Highly by Your Friends'), ('popular', 'Popular in the Community'), ('similar_tags', 'Similar Tags to Your Interests'), ('recently_active', 'Recently Active Character'), ('new_character', 'New Character You Might Like')], max_length=50, verbose_name='Recommendation Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_dismissed', models.BooleanField(default=False, verbose_name='Dismissed')),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='characters.character', verbose_name='Character')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_recommendations', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Character Recommendation',
                'verbose_name_plural': 'Character Recommendations',
                'ordering': ['-score'],
                'indexes': [models.Index(fields=['user', 'is_dismissed'], name='recommendat_user_id_f1ea2b_idx'), models.Index(fields=['character'], name='recommendat_charact_c14d8b_idx'), models.Index(fields=['score'], name='recommendat_score_14c16a_idx')],
                'unique_together': {('user', 'character')},
            },
        ),
    ]
